name: Test bedstat pipeline

on:
  push:
    branches: [master, dev, dev_alex]
  pull_request:
    branches: [master, dev]

jobs:
  pytest:
    strategy:
      matrix:
        python-version: [3.6, 3.8]
        os: [ubuntu-latest] # can't use macOS when using service containers or container jobs
        r: [release]
    runs-on: ${{ matrix.os }}
    services:
        postgres:
          image: postgres
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: bedbasepassword
            POSTGRES_DB: postgres
          ports:
          - 5432:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependancies
      run: if [ -f requirements/requirements-all.txt ]; then pip install -r requirements/requirements-all.txt; fi

    - name: Install dev dependancies
      run: if [ -f requirements/requirements-dev.txt ]; then pip install -r requirements/requirements-dev.txt; fi

    - name: Install test dependancies
      run: if [ -f requirements/requirements-test.txt ]; then pip install -r requirements/requirements-test.txt; fi

    - name: Install libcurl
      run: |
        sudo apt-get update
        sudo apt-get install libcurl4-openssl-dev

    - name: Install package
      run: python -m pip install .

    - name: Run pytest tests
      run: pytest tests -x -vv


#    - uses: r-lib/actions/setup-r@master
#      with:
#        r-version: ${{ matrix.r }}
#
#    - name: Install R dependancies
#      run: Rscript scripts/installRdeps.R

#    - name: Run pipeline
#      run: looper run -p local tests/data/bedstat_config.yaml
#
#    - name: Test plots exist
#      run: |
#        if ls $GITHUB_WORKSPACE/outputs/bedstat_output/a6a08126cb6f4b1953ba0ec8675df85a/test_hg38*.png 1> /dev/null 2>&1; then
#          echo "SUCCESS";
#        else
#          echo "ERROR: files do not exist: $GITHUB_WORKSPACE/outputs/bedstat_output/a6a08126cb6f4b1953ba0ec8675df85a/test_hg38*.png";
#          exit 1
#        fi

#    - name: Test record in PostgreSQL
#      run: |
#        echo "from bbconf import BedBaseConf; from bbconf.const import *; bbc = BedBaseConf('$GITHUB_WORKSPACE/tests/data/config_min.yaml'); assert bbc.bed.record_count == 1, 'Number of records in the bedfiles table not equal 1'" | python3 -
